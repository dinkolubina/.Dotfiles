# Inspired by https://gggritso.com/human-git-aliases
[hub]
        protocol = https
[user]
        name = {{ full_name }}
        email = {{ git_email }}
[alias]
        a = add
        st = status
        s = status
        co = checkout
        c = checkout

        discard = checkout --
        save = commit -m
        resave = commit --amend -m
        uncommit = reset --mixed HEAD~
        nevermind = !git reset --hard HEAD && git clean -d -f

        fold = commit --amend --no-edit
        last = log -1 HEAD --format=format:"%Cred%H"
        copy-last-hash = !git last | pbcopy
        summary = status -u -s
        contributors = shortlog -s -n --no-merges
        file-trail = log --follow -p -w
        merge-trail = log --ancestry-path --merges
        unmerged-files = diff --name-only

        graph = log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Cresetâ€¢ %<(75,trunc)%s (%cN, %ar) %Cred%d' --date-order
        history = log -10 --format=format:'%Cgreen%h %Creset%s (%aN, %ar)'
        new-branch = checkout -b
        rename-branch = branch -m
        delete-branch = branch -D
        branches = "!git branch | ag -v '\\b(staging|master)\\b'"
        recent-branches = branch -a --sort=committerdate
        current-branch = rev-parse --abbrev-ref HEAD

        tags = tag
        stashes = stash list
        prestage = diff -w
        precommit = diff -w --cached
        remotes = remote -v
        
        show-last = show HEAD
        untrack = rm -r --cached
        rewrite = rebase -i

        aliases = !git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\:\\ /
        autotrack = "!f() { B=$(git current-branch); git branch --set-upstream-to=origin/$B; }; f"
        into = "!f() { B=$(git current-branch); git checkout $1; git pull; git merge $B --no-edit; }; f"
        into-staging = "!f() { B=$(git current-branch); git checkout staging; git pull; git merge $B --no-edit; }; f"
        into-master = "!f() { B=$(git current-branch); git checkout master; git pull; git merge $B --no-edit; }; f"
        onto = "!f() { B=$(git current-branch); git checkout master; git pull; git checkout $B; git rebase -i $1; }; f"
        work-log = !git log --reverse master...HEAD --format=format:'- %w(0,0,4)%B'
        submit = !git push && git autotrack
        whodunit = blame -wMC
        axe = log --reverse -p -w -S


        # diff-so-fancy
        df = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
        dfs = git df --staged
        # Get changes for a single commit
        dfc = "!dfc() { git df $1^ $1; }; dfc"

        please = push --force-with-lease
        publish = "!git push -u origin $(git rev-parse --abbrev-ref HEAD)"
        # publish current branch
        publish = "!f() { git push -u ${1:-origin} $(git rev-parse --abbrev-ref HEAD); }; f"

        # http://gggritso.com/human-git-aliases
        unstage = reset -q HEAD --
        discard = checkout --
        uncommit = reset --mixed HEAD~

        l = log --graph --decorate --oneline --abbrev-commit --all
        h = log --graph --decorate --oneline --abbrev-commit

        issues = !hub browse -- issues
        url = "!f() { sha=$(git rev-parse ${1:-HEAD}); hub browse -u -- commit/$sha; }; f"
        # Copy current branch name to clipboard (macOS only)
        cb = "!git rev-parse --abbrev-ref HEAD | tr -d '\n' | pbcopy"

        remote-branches = "!f() { git ls-remote --heads ${1:origin} | sed 's?.*refs/heads/??'; }; f "
[color]
        diff = auto
        status = auto
        branch = auto
        ui = true
[core]
        excludesfile = ~/.gitignore_global
        editor = vim
[apply]
        whitespace = nowarn
[mergetool]
        keepBackup = false
[difftool]
        prompt = false
[push]
        # See `git help config` (search for push.default)
        # for more information on different options of the below setting.
        #
        # Setting to git 2.0 default to surpress warning message
        default = simple
        followTags = true
[github]
        user = {{ git_user }}
[pager]
       diff = diff-so-fancy | less --tabs=1,5 -RFX
       show = diff-so-fancy | less --tabs=1,5 -RFX